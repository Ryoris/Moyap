{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:5000';\nconst NoteService = {\n  getAllNotes: async token => {\n    const response = await axios.get(`${BASE_URL}/notes`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  },\n  addNote: async (noteData, token) => {\n    const response = await axios.post(`${BASE_URL}/notes`, noteData, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  },\n  deleteNote: async (noteId, token) => {\n    const response = await axios.delete(`${BASE_URL}/notes/${noteId}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  },\n  getAverage: async token => {\n    const response = await axios.get(`${BASE_URL}/average`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  },\n  register: async userData => {\n    const response = await axios.post(`${BASE_URL}/register`, userData);\n    return response.data;\n  },\n  login: async userData => {\n    const response = await axios.post(`${BASE_URL}/login`, userData);\n    return response.data;\n  }\n};\nexport default NoteService;","map":{"version":3,"names":["axios","BASE_URL","NoteService","getAllNotes","token","response","get","headers","Authorization","data","addNote","noteData","post","deleteNote","noteId","delete","getAverage","register","userData","login"],"sources":["C:/Users/c22du/Documents/Projets/Moyap/gestion-des-notes/src/components/NoteService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5000';\r\n\r\nconst NoteService = {\r\n  getAllNotes: async (token) => {\r\n    const response = await axios.get(`${BASE_URL}/notes`, {\r\n      headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  addNote: async (noteData, token) => {\r\n    const response = await axios.post(`${BASE_URL}/notes`, noteData, {\r\n      headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  deleteNote: async (noteId, token) => {\r\n    const response = await axios.delete(`${BASE_URL}/notes/${noteId}`, {\r\n      headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getAverage: async (token) => {\r\n    const response = await axios.get(`${BASE_URL}/average`, {\r\n      headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  register: async (userData) => {\r\n    const response = await axios.post(`${BASE_URL}/register`, userData);\r\n    return response.data;\r\n  },\r\n\r\n  login: async (userData) => {\r\n    const response = await axios.post(`${BASE_URL}/login`, userData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default NoteService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,QAAQ,EAAE;MACpDM,OAAO,EAAE;QAAEC,aAAa,EAAEJ;MAAM;IAClC,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDC,OAAO,EAAE,MAAAA,CAAOC,QAAQ,EAAEP,KAAK,KAAK;IAClC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,QAAQ,EAAEU,QAAQ,EAAE;MAC/DJ,OAAO,EAAE;QAAEC,aAAa,EAAEJ;MAAM;IAClC,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDI,UAAU,EAAE,MAAAA,CAAOC,MAAM,EAAEV,KAAK,KAAK;IACnC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACe,MAAM,CAAC,GAAGd,QAAQ,UAAUa,MAAM,EAAE,EAAE;MACjEP,OAAO,EAAE;QAAEC,aAAa,EAAEJ;MAAM;IAClC,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDO,UAAU,EAAE,MAAOZ,KAAK,IAAK;IAC3B,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,UAAU,EAAE;MACtDM,OAAO,EAAE;QAAEC,aAAa,EAAEJ;MAAM;IAClC,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDQ,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMb,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,WAAW,EAAEiB,QAAQ,CAAC;IACnE,OAAOb,QAAQ,CAACI,IAAI;EACtB,CAAC;EAEDU,KAAK,EAAE,MAAOD,QAAQ,IAAK;IACzB,MAAMb,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,QAAQ,EAAEiB,QAAQ,CAAC;IAChE,OAAOb,QAAQ,CAACI,IAAI;EACtB;AACF,CAAC;AAED,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}