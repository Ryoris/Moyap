{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c22du\\\\Documents\\\\Projets\\\\Moyap\\\\gestion-des-notes\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteForm from './components/NoteForm';\nimport NoteList from './components/NoteList';\nimport NoteService from './components/NoteService';\nimport Auth from './Auth';\nimport Average from './Average';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [average, setAverage] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    if (token) {\n      fetchNotes();\n      fetchAverage();\n    }\n  }, [token]);\n  const fetchNotes = async () => {\n    try {\n      const data = await NoteService.getAllNotes(token);\n      setNotes(data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n  const fetchAverage = async () => {\n    try {\n      const {\n        average\n      } = await NoteService.getAverage(token);\n      setAverage(average);\n    } catch (error) {\n      console.error('Error fetching average:', error);\n    }\n  };\n  const handleAddNote = async newNote => {\n    try {\n      const addedNote = await NoteService.addNote(newNote, token);\n      setNotes([...notes, addedNote]);\n      fetchAverage();\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n  const handleDeleteNote = async noteId => {\n    try {\n      await NoteService.deleteNote(noteId, token);\n      setNotes(notes.filter(note => note._id !== noteId));\n      fetchAverage();\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Auth, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestion des Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      onAddNote: handleAddNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes,\n      onDeleteNote: handleDeleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Average, {\n      average: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LSUAJnXlQ3uCT0JTbZxfvUqhcIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteForm","NoteList","NoteService","Auth","Average","jsxDEV","_jsxDEV","App","_s","notes","setNotes","average","setAverage","token","setToken","fetchNotes","fetchAverage","data","getAllNotes","error","console","getAverage","handleAddNote","newNote","addedNote","addNote","handleDeleteNote","noteId","deleteNote","filter","note","_id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onAddNote","onDeleteNote","_c","$RefreshReg$"],"sources":["C:/Users/c22du/Documents/Projets/Moyap/gestion-des-notes/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteForm from './components/NoteForm';\nimport NoteList from './components/NoteList';\nimport NoteService from './components/NoteService';\nimport Auth from './Auth';\nimport Average from './Average';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [average, setAverage] = useState(null);\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    if (token) {\n      fetchNotes();\n      fetchAverage();\n    }\n  }, [token]);\n\n  const fetchNotes = async () => {\n    try {\n      const data = await NoteService.getAllNotes(token);\n      setNotes(data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  const fetchAverage = async () => {\n    try {\n      const { average } = await NoteService.getAverage(token);\n      setAverage(average);\n    } catch (error) {\n      console.error('Error fetching average:', error);\n    }\n  };\n\n  const handleAddNote = async (newNote) => {\n    try {\n      const addedNote = await NoteService.addNote(newNote, token);\n      setNotes([...notes, addedNote]);\n      fetchAverage();\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n\n  const handleDeleteNote = async (noteId) => {\n    try {\n      await NoteService.deleteNote(noteId, token);\n      setNotes(notes.filter((note) => note._id !== noteId));\n      fetchAverage();\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n\n  if (!token) {\n    return <Auth setToken={setToken} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Gestion des Notes</h1>\n      <NoteForm onAddNote={handleAddNote} />\n      <NoteList notes={notes} onDeleteNote={handleDeleteNote} />\n      <Average average={average} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}